<?xml version="1.0" encoding="UTF-8"?>
<!-- 
== Copyright (c) 2002-2014. All rights reserved. 
== Financial Products Markup Language is subject to the FpML public license. 
== A copy of this license is available at http://www.fpml.org/license/license.html
-->
<xsd:schema xmlns="http://svn.msk.trd.ru/xsd/fixml" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:fpml-annotation="http://www.fpml.org/annotation" xmlns:view="http://www.fpml.org/views" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" targetNamespace="http://svn.msk.trd.ru/xsd/fixml" elementFormDefault="qualified" attributeFormDefault="unqualified" version="$Revision: 7629 $" ecore:nsPrefix="fpml" ecore:package="org.fpml" ecore:documentRoot="FpML">
	<xsd:annotation>
		<xsd:appinfo>
			<view:exclusive view="recordkeeping" />
			<view:exclusive view="reporting" />
		</xsd:appinfo>
	</xsd:annotation>
	<xsd:include schemaLocation="fpml-business-events.xsd"/>
	<xsd:complexType name="NonpublicExecutionReport">
		<xsd:complexContent>
			<xsd:extension base="CorrectableRequestMessage">
				<xsd:sequence>
					<xsd:element name="asOfDate" type="IdentifiedDate" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The date for which this document reports positions and valuations.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="asOfTime" type="xsd:time" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The time for which this report was generated (i.e., the cut-off time of the report).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:group ref="PortfolioReferenceBase.model" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Allows a reference to porftfolio request to be included, such as a portfolio compression request.  NOTE:  this is an element that is under assessment and may not be available in a subsequent working draft.</xsd:documentation>
						</xsd:annotation>
					</xsd:group>
					<!--<xsd:group ref="Events.model"/> BPWG2014 Replaced by the below - comment to be deleted before 5.8LCWD  -->
					<xsd:choice>
						<xsd:sequence>
							<xsd:annotation>
								<xsd:appinfo>
									<view:override view="pretrade" minOccurs="1"/>
									<view:override view="transparency" minOccurs="1"/>
									<view:override view="recordkeeping" minOccurs="1"/>
								</xsd:appinfo>
							</xsd:annotation>
							<xsd:element name="originatingEvent" type="OriginatingEvent" minOccurs="0">
								<xsd:annotation>
									<xsd:appinfo>
										<view:skip view="pretrade" rationale="Unsupported"/>
									</xsd:appinfo>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="trade" type="Trade">
								<xsd:annotation>
									<xsd:appinfo>
										<view:override view="pretrade" minOccurs="1"/>
										<view:override view="transparency" minOccurs="1"/>
										<view:override view="recordkeeping" minOccurs="1"/>
									</xsd:appinfo>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="tradingEvent" type="TradingEventSummary" minOccurs="0" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation xml:lang="en">This is provided to support snapshot reporting that requires trading history. Some implementations are using the "trade" event to report the current snapshot of a contract.  In these cases it may also be necessary to report the most recent trading event to support regulatory reporting mandates.  For this reason the tradingEvent is provided to allow that event to be attached to the trade report.</xsd:documentation>
									<xsd:appinfo>
										<view:exclusive view="recordkeeping"/>
									</xsd:appinfo>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
						<xsd:group ref="PostTradeEvents.model"/>
						<xsd:group ref="ChangeEvents.model"/>
						<xsd:group ref="OptionsEvents.model"/>
						<xsd:element name="withdrawal" type="Withdrawal">
							<xsd:annotation>
								<xsd:appinfo>
									<view:skip view="pretrade" rationale="Unsupported"/>
									<view:skip view="transparency" rationale="Unsupported"/>
								</xsd:appinfo>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:group ref="EventValuation.model" minOccurs="0"/>
					<xsd:group ref="PartiesAndAccounts.model"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="NonpublicExecutionReportRetracted">
		<xsd:complexContent>
			<xsd:extension base="NonCorrectableRequestMessage">
				<xsd:sequence>
					<xsd:choice>
						<!--<xsd:group ref="Events.model" minOccurs="0"/> BPWG2014 Replaced by the below - comment to be deleted before 5.8LCWD  -->
						<xsd:choice minOccurs="0">
							<xsd:sequence>
								<xsd:annotation>
									<xsd:appinfo>
										<view:override view="pretrade" minOccurs="1"/>
										<view:override view="transparency" minOccurs="1"/>
										<view:override view="recordkeeping" minOccurs="1"/>
									</xsd:appinfo>
								</xsd:annotation>
								<xsd:element name="originatingEvent" type="OriginatingEvent" minOccurs="0">
									<xsd:annotation>
										<xsd:appinfo>
											<view:skip view="pretrade" rationale="Unsupported"/>
										</xsd:appinfo>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="trade" type="Trade">
									<xsd:annotation>
										<xsd:appinfo>
											<view:override view="pretrade" minOccurs="1"/>
											<view:override view="transparency" minOccurs="1"/>
											<view:override view="recordkeeping" minOccurs="1"/>
										</xsd:appinfo>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="tradingEvent" type="TradingEventSummary" minOccurs="0" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation xml:lang="en">This is provided to support snapshot reporting that requires trading history. Some implementations are using the "trade" event to report the current snapshot of a contract.  In these cases it may also be necessary to report the most recent trading event to support regulatory reporting mandates.  For this reason the tradingEvent is provided to allow that event to be attached to the trade report.</xsd:documentation>
										<xsd:appinfo>
											<view:exclusive view="recordkeeping"/>
										</xsd:appinfo>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
							<xsd:group ref="PostTradeEvents.model"/>
							<xsd:group ref="ChangeEvents.model"/>
							<xsd:group ref="OptionsEvents.model"/>
							<xsd:element name="withdrawal" type="Withdrawal">
								<xsd:annotation>
									<xsd:appinfo>
										<view:skip view="pretrade" rationale="Unsupported"/>
										<view:skip view="transparency" rationale="Unsupported"/>
									</xsd:appinfo>
								</xsd:annotation>
							</xsd:element>
						</xsd:choice>
						<xsd:sequence>
							<xsd:element name="primaryAssetClass" type="AssetClass" minOccurs="0"/>
							<xsd:element name="tradeIdentifier" type="PartyTradeIdentifier"/>
							<xsd:element name="eventIdentifier" type="BusinessEventIdentifier">
								<xsd:annotation>
									<xsd:documentation xml:lang="en">Individual parties should only use a single event identifier to identify a retraction. Platforms providing services on behalf of both parties in a transaction may provide event identifiers for both parties; in this case it is up to the recipient (the trade repository) to validate that the event IDs refer to the same event.</xsd:documentation>
									<xsd:appinfo>
										<view:override view="recordkeeping" maxOccurs="2" />
										<view:override view="reporting" maxOccurs="2" />
									</xsd:appinfo>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="relatedParty" type="RelatedParty" minOccurs="0" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation xml:lang="en">This may be used to identify one or more parties that perform a role within the transaction.  If this is within a partyTradeInformation block, the related party performs the role with respect to the party identifie by the "partyReference" in the partyTradeInformation block.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:choice>
					<xsd:group ref="PartiesAndAccounts.model" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:element name="nonpublicExecutionReport" type="NonpublicExecutionReport"/>
	<xsd:element name="nonpublicExecutionReportAcknowledgement" type="Acknowledgement"/>
	<xsd:element name="nonpublicExecutionReportException" type="Exception"/>
	<xsd:element name="nonpublicExecutionReportRetracted" type="NonpublicExecutionReportRetracted"/>
</xsd:schema>
